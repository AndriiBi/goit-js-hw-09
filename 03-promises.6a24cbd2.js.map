{"mappings":"YAAA,IAAMA,EAAO,CACXC,WAAYC,SAASC,cAAc,uBACnCC,UAAWF,SAASC,cAAc,sBAClCE,YAAaH,SAASC,cAAc,wBACpCG,KAAMJ,SAASC,cAAc,UAgC/B,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAtCPT,EAAKM,KAAKW,iBAAiB,UAE3B,SAAuBC,GACrBA,EAAMC,iBAEN,IAAMV,EAAQW,SAASpB,EAAKC,WAAWoB,OACjCC,EAAOF,SAASpB,EAAKI,UAAUiB,QAMvC,SAAwBE,EAAQC,EAAcF,GAE5C,IAAK,IAAIG,EAAI,EAAGA,GAAKF,EAAQE,IAAK,CAIhClB,EAAckB,EAFOD,GAAgBC,EAAI,GAAKH,GAG3CI,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,QAAQC,IAAI,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAE3DsB,OAAM,SAAAJ,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,QAAQC,IAAI,sBAAqCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,KAd7DuB,CAFeZ,SAASpB,EAAKK,YAAYgB,OAElBZ,EAAOa,E","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  delayInput: document.querySelector('input[name=\"delay\"]'),\n  stepInput: document.querySelector('input[name=\"step\"]'),\n  amountInput: document.querySelector('input[name=\"amount\"]'),\n  form: document.querySelector('.form'),\n}\n\n\nrefs.form.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit (event) {\n  event.preventDefault();\n\n  const delay = parseInt(refs.delayInput.value);\n  const step = parseInt(refs.stepInput.value);\n  const amount = parseInt(refs.amountInput.value);\n\n  createPromises(amount, delay, step);\n};\n\nfunction createPromises(amount, initialDelay, step) {\n\n  for (let i = 1; i <= amount; i++) {\n    \n    const currentDelay = initialDelay + (i - 1) * step;\n\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$ce04d3a99e08e73b$var$refs","delayInput","document","querySelector","stepInput","amountInput","form","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","parseInt","value","step","amount","initialDelay","i","then","param","console","log","concat","catch","$ce04d3a99e08e73b$var$createPromises"],"version":3,"file":"03-promises.6a24cbd2.js.map"}